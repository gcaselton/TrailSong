#N canvas 3393 271 758 880 12;
#X text 268 51 Chord Change to IV/iv;
#X floatatom 352 196 5 0 0 0 - - - 0;
#X obj 185 119 r 4_bars;
#X obj 370 250 expr if($f1 >= 41 \, -7 \, 5);
#X obj 352 286 +;
#X floatatom 352 329 5 0 0 0 - - - 0;
#X text 395 197 Midi value for root bass note;
#X text 396 330 Midi value for IV chord bass note;
#X obj 185 224 sel 1;
#X floatatom 229 347 5 0 0 0 - - - 0;
#X floatatom 185 347 5 0 0 0 - - - 0;
#X obj 185 257 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 217 257 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 185 187 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 185 441 s chord_change;
#X floatatom 185 402 5 0 0 0 - - - 0;
#X obj 352 151 r bass_root;
#X obj 100 143 sel 0;
#X msg 100 168 0;
#X text 159 565 This patch handles the bass movement from the root note to the IV/iv chord and back again in 4 bar cycles \, which means the chord being played alternates per every kilometre of the 5k run. Because the notes in the synth arpeggio stay the same throughout the change \, this creates a nice maj9#11 harmony if the key is major \, and a 9sus4 harmony if it's minor.;
#X text 270 739 Created by George Caselton;
#X text 288 763 Last updated: 29/07/24;
#X text 61 220 Toggles between the two values, f 15;
#X obj 100 119 r p_PLAY_s;
#X connect 1 0 3 0;
#X connect 1 0 4 0;
#X connect 1 0 10 0;
#X connect 2 0 13 0;
#X connect 3 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 8 0 11 0;
#X connect 8 1 12 0;
#X connect 9 0 15 0;
#X connect 10 0 15 0;
#X connect 11 0 10 0;
#X connect 12 0 9 0;
#X connect 13 0 8 0;
#X connect 15 0 14 0;
#X connect 16 0 1 0;
#X connect 17 0 18 0;
#X connect 18 0 13 0;
#X connect 23 0 17 0;
